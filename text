Начнем с небольшого погружения в историю.

Давным давно, когда компьютеры были больше, небо выше, а трава зеленее - языки программирования были ассемблерные - перфокарты и их вариации.

Но это была боль и инструкции у разных мейнфреймов отличались, тра-та-та.

На смену им пришли компилируемые метаязыки. Языки, которые предоставляли абстракции, компилируемые в ассемблерные инструкции.

Первым из них был Fortran.
(Я не гарантирую хронологичность языков)

-------

Потом появился Cobol - с целью писать программы на читаемом языке - не многим лучше Fortran.

-------

Следующим был Basic - взяли Cobol и выкинули из него лишнее, оставив самое нужно. Плюс там была организована хорошая обработка строк (конкатинация и прочее). И там появились инструкции INPUT, которые организовывали общение со внешним устройством - "первая"" блокирующая инструкция.

-------

ALGOL 60

"Begin" и "End" - это от туда (так как { } использовать было нельзя - из тупо небыло на клавиатуре). :)
Уже тогда люди поняли начали понимать, что goto - это плохо.

-------

Pascal

Наследник ALGOLa

-------

BCPL

Basic CPL

-------

B

Fortran + BCPL

-------

C

Pascal + B

-------

Simula

Class + Objects to Algol

-------

Smalltalk

First true OOP language 

-------